ESC -> :wq


*************************  Case 1  *************************

============================  User 1 =============
1. Вносит изменения в файл  index.htm

--------------------------------
<ul class="menu">
	<li><a href="#">Home</a></li>
	<li><a href="#">Products</a></li>
	<li><a href="#">Contacts</a></li>
	<li><a href="#">About us</a></li>
</ul>
--------------------------------

2. Сделать commit этого файла

3. Залить изменения  на Github-repo

      git push -u origin master


============================  User 2 =============

1. Вносит изменения в файл  cat.html

---------------------------------------
  <h1>Hello from catalog</h1>
  <p>First paragraph</p>
  <p>Second paragraph</p>

---------------------------------------

2. Сделать commit этого файла

3. Делает попытку залить изменения  на Github-repo

      git push -u origin master


============================  User 1 =============
4. Вносит изменения в файл  index.htm

--------------------------------
<ul class="menu">
	<li><a href="#">Home</a></li>
	<li><a href="#">Products</a></li>
	<li><a href="#">Contacts</a></li>
	<li><a href="#">About us</a></li>
</ul>
<p>new paragraph</p>
--------------------------------

Сделать commit этого файла

git push


и получает отказ принять его изменения
 ! [rejected]  master -> master (non-fast-forward)

Это потому, что сначала надо обновиться с  Github-repo а потом заливать изменения
Решаем эту проблему

4. Выполнить
		git pull

5. Выполнить
		git push



============================  User 1 =============
1. Выполнить

    git pull




***********************************************************
*************************  Case 2  ************************

============================  User 1 =============
1. Вносит изменения в файл  cat.html

---------------------------------------
  <h1>Hello from catalog</h1>
  <p>First paragraph</p>
  <p>Second paragraph</p>
  <p>Third paragraph</p>

---------------------------------------
2. Сделать commit изменений

3. Залить изменения  на Github-repo
      git push



============================  User_2 =============
1. Вносит изменения в файл  cat.html

---------------------------------------
  <h1>Hello from catalog</h1>
  <p>First paragraph</p>
  <p>Second paragraph</p>
  <p>My awesome paragraph</p>

---------------------------------------
2. Сделать commit изменений

3. Выполнить
	git pull

Получаем сообщение
    CONFLICT (content) Merge conflict in cat.html
    Aitomatic merge failed, fix conflict and commit the result

4. Если набрать
	git status

то увидим в каком файле конфликт
Надо открыть этот файл и разрешить вручную конфликт

5. После разпешения конфликта
	git commit -a

Откроется vim
пишем в нем описание и выходим с сохранением

6. Залить изменения  на Github-repo
      git push


============================  User 1 =============
1. Выполнить

    git pull
